#include <bits/stdc++.h>
using namespace std;
   int uniquePathsWithObstacles(vector<vector<int> > obs) {
        int n=obs.size();
        int m=obs[0].size();
        if(obs[0][0])
            return 0;
        int dp[n+1][m+1];
        dp[0][0]=1;
        for(int i=1;i<n;i++)
        {
            if(obs[i][0])
                dp[i][0]=0;
            else
                dp[i][0]=dp[i-1][0];
        }
        for(int j=1;j<m;j++)
        {
            if(obs[0][j])
                dp[0][j]=0;
            else
                dp[0][j]=dp[0][j-1];
        }
        for(int i=1;i<n;i++)
        {
            for(int  j=1;j<m;j++)
            {
                if(obs[i][j])
                    dp[i][j]=0;
                else
                    dp[i][j]=dp[i][j-1]+dp[i-1][j];
            }
        }
        return dp[n-1][m-1];
    } 
signed main(){
       int m,n;
       cout<<"please enter the size of grid int the form of m,n"<<endl;
       cin>>m>>n;
       vector<vector<int> > grid(m,vector<int> (n,0));
       cout<<"please fill the grid of size mXn"<<endl;
       for(int i=0;i<m;i++)
       for(int j=0;j<n;j++)
       cin>>grid[i][j];
       cout<<"Number of unique path form 1,1 to m,n is: "<<endl;
       cout<<uniquePathsWithObstacles(grid)<<endl;
    return 0;
}
